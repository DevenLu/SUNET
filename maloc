./http/http_parse.cpp:            request.method = (char*) malloc ((parse_len + 1) * sizeof(char));
./http/http_parse.cpp:            request.url = (char*) malloc ((parse_len + 1) * sizeof(char));
./http/http_parse.cpp:            char* url = (char*) malloc ((parse_len + 1) * sizeof(char));
./http/http_parse.cpp:            request.url = (char*) malloc ((1 + parse_len) * sizeof(char));
./http/http_parse.cpp:        request.version = (char *)malloc(8 * sizeof(char));
./http/http_parse.cpp:        request.version = (char*) malloc ((1 + parse_len) * sizeof(char));
./http/http_parse.cpp:            key = (char*) malloc (sizeof(char) * (1 + parse_len));
./http/http_parse.cpp:            value = (char*) malloc (sizeof(char) * (parse_len + 1));
./http/http_parse.cpp~:            request.method = (char*) malloc ((parse_len + 1) * sizeof(char));
./http/http_parse.cpp~:            request.url = (char*) malloc ((parse_len + 1) * sizeof(char));
./http/http_parse.cpp~:            char* url = (char*) malloc ((parse_len + 1) * sizeof(char));
./http/http_parse.cpp~:            request.url = (char*) malloc ((1 + parse_len) * sizeof(char));
./http/http_parse.cpp~:        request.version = (char *)malloc(8 * sizeof(char));
./http/http_parse.cpp~:        request.version = (char*) malloc ((1 + parse_len) * sizeof(char));
./http/http_parse.cpp~:            key = (char*) malloc (sizeof(char) * (1 + parse_len));
./http/http_parse.cpp~:            value = (char*) malloc (sizeof(char) * (parse_len + 1));
Binary file ./http/test_http matches
Binary file ./http/http_parse.o matches
Binary file ./io/sub matches
Binary file ./io/epoll.o matches
./io/epoll.cpp:    _epl_evt_set = (struct epoll_event*) malloc (sizeof(struct epoll_event) * _max_evt_cnt);
Binary file ./io/event matches
./task/req_task.cpp~:    _task_ret = (void*)(malloc(sizeof(char) * 65536));
./task/req_task.cpp:	_task_ret = (void*)(malloc(sizeof(char) * 65536));
Binary file ./task/req_task.o matches
